version: '3.7'
services:
  postgres:
    build:
      context: ./DATABASE/postgresql
      dockerfile: Dockerfile
    image: postgresql
    ports:
      - 5432:5432

  mongo:
    build:
      context: ./DATABASE/mongodb
      dockerfile: Dockerfile
    image: mongo
    ports:
      - 27017:27017

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    environment:
      SERVICE_NAME: zookeeper
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      zk_id: "1"
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    links:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    links:
      - kafka
      - zookeeper
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka:9092"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry


  kafka-init-topics:
    image: confluentinc/cp-kafka:latest
    volumes:
       - ./data/message.json:/data/message.json
    depends_on:
      - kafka
    command: >
      bash -c 'echo "Waiting for Kafka to be ready..." && \
               cub kafka-ready -b kafka:9092 1 30 && \
               kafka-topics --create --topic asistencias --partitions 3 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092'
